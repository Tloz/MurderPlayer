#############################################################################
# Makefile for building: MurderPlayer_GUI
# Generated by qmake (2.01a) (Qt 4.8.1) on: Fri Sep 13 11:41:03 2013
# Project:  MurderPlayer_GUI.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile MurderPlayer_GUI.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I. -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtXml -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Engine/character.cpp \
		main.cpp \
		Engine/murder.cpp \
		Engine/report.cpp \
		Engine/event.cpp \
		Engine/settings.cpp \
		Engine/scenario.cpp \
		Engine/fileparsing.cpp \
		Engine/data.cpp \
		Engine/investigation.cpp \
		Engine/saveddata.cpp \
		GUI/gamewidget.cpp \
		GUI/mjwidget.cpp \
		GUI/settingswidget.cpp \
		GUI/logwidget.cpp \
		GUI/datawidget.cpp \
		GUI/mainwindow.cpp \
		GUI/firstwidget.cpp \
		GUI/clueview.cpp \
		GUI/eventview.cpp \
		Engine/log.cpp moc_gamewidget.cpp \
		moc_mjwidget.cpp \
		moc_settingswidget.cpp \
		moc_logwidget.cpp \
		moc_datawidget.cpp \
		moc_mainwindow.cpp \
		moc_firstwidget.cpp \
		moc_clueview.cpp \
		moc_eventview.cpp \
		qrc_ressources.cpp
OBJECTS       = character.o \
		main.o \
		murder.o \
		report.o \
		event.o \
		settings.o \
		scenario.o \
		fileparsing.o \
		data.o \
		investigation.o \
		saveddata.o \
		gamewidget.o \
		mjwidget.o \
		settingswidget.o \
		logwidget.o \
		datawidget.o \
		mainwindow.o \
		firstwidget.o \
		clueview.o \
		eventview.o \
		log.o \
		moc_gamewidget.o \
		moc_mjwidget.o \
		moc_settingswidget.o \
		moc_logwidget.o \
		moc_datawidget.o \
		moc_mainwindow.o \
		moc_firstwidget.o \
		moc_clueview.o \
		moc_eventview.o \
		qrc_ressources.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		MurderPlayer_GUI.pro
QMAKE_TARGET  = MurderPlayer_GUI
DESTDIR       = 
TARGET        = MurderPlayer_GUI

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_gamewidget.h ui_mjwidget.h ui_settingswidget.h ui_logwidget.h ui_datawidget.h ui_mainwindow.h ui_firstwidget.h ui_eventview.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: MurderPlayer_GUI.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtXml.prl \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile MurderPlayer_GUI.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/declarative_debug.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtXml.prl:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile MurderPlayer_GUI.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/MurderPlayer_GUI1.0.0 || $(MKDIR) .tmp/MurderPlayer_GUI1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/MurderPlayer_GUI1.0.0/ && $(COPY_FILE) --parents Engine/character.h Engine/murder.h Engine/report.h Engine/event.h Engine/settings.h Engine/scenario.h Engine/fileparsing.h Engine/data.h Engine/investigation.h Engine/saveddata.h GUI/gamewidget.h GUI/mjwidget.h GUI/settingswidget.h GUI/logwidget.h GUI/datawidget.h GUI/mainwindow.h GUI/firstwidget.h GUI/clueview.h GUI/eventview.h Engine/log.h .tmp/MurderPlayer_GUI1.0.0/ && $(COPY_FILE) --parents ressources.qrc .tmp/MurderPlayer_GUI1.0.0/ && $(COPY_FILE) --parents Engine/character.cpp main.cpp Engine/murder.cpp Engine/report.cpp Engine/event.cpp Engine/settings.cpp Engine/scenario.cpp Engine/fileparsing.cpp Engine/data.cpp Engine/investigation.cpp Engine/saveddata.cpp GUI/gamewidget.cpp GUI/mjwidget.cpp GUI/settingswidget.cpp GUI/logwidget.cpp GUI/datawidget.cpp GUI/mainwindow.cpp GUI/firstwidget.cpp GUI/clueview.cpp GUI/eventview.cpp Engine/log.cpp .tmp/MurderPlayer_GUI1.0.0/ && $(COPY_FILE) --parents GUI/gamewidget.ui GUI/mjwidget.ui GUI/settingswidget.ui GUI/logwidget.ui GUI/datawidget.ui GUI/mainwindow.ui GUI/firstwidget.ui GUI/eventview.ui .tmp/MurderPlayer_GUI1.0.0/ && (cd `dirname .tmp/MurderPlayer_GUI1.0.0` && $(TAR) MurderPlayer_GUI1.0.0.tar MurderPlayer_GUI1.0.0 && $(COMPRESS) MurderPlayer_GUI1.0.0.tar) && $(MOVE) `dirname .tmp/MurderPlayer_GUI1.0.0`/MurderPlayer_GUI1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/MurderPlayer_GUI1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_gamewidget.cpp moc_mjwidget.cpp moc_settingswidget.cpp moc_logwidget.cpp moc_datawidget.cpp moc_mainwindow.cpp moc_firstwidget.cpp moc_clueview.cpp moc_eventview.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_gamewidget.cpp moc_mjwidget.cpp moc_settingswidget.cpp moc_logwidget.cpp moc_datawidget.cpp moc_mainwindow.cpp moc_firstwidget.cpp moc_clueview.cpp moc_eventview.cpp
moc_gamewidget.cpp: Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		Engine/log.h \
		GUI/gamewidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/gamewidget.h -o moc_gamewidget.cpp

moc_mjwidget.cpp: Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		Engine/log.h \
		GUI/mjwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/mjwidget.h -o moc_mjwidget.cpp

moc_settingswidget.cpp: GUI/settingswidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/settingswidget.h -o moc_settingswidget.cpp

moc_logwidget.cpp: Engine/log.h \
		GUI/logwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/logwidget.h -o moc_logwidget.cpp

moc_datawidget.cpp: Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		GUI/clueview.h \
		GUI/eventview.h \
		GUI/datawidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/datawidget.h -o moc_datawidget.cpp

moc_mainwindow.cpp: GUI/datawidget.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		GUI/clueview.h \
		GUI/eventview.h \
		GUI/gamewidget.h \
		Engine/log.h \
		GUI/firstwidget.h \
		GUI/logwidget.h \
		GUI/mjwidget.h \
		GUI/settingswidget.h \
		Engine/fileparsing.h \
		GUI/mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/mainwindow.h -o moc_mainwindow.cpp

moc_firstwidget.cpp: Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		GUI/firstwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/firstwidget.h -o moc_firstwidget.cpp

moc_clueview.cpp: Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		GUI/clueview.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/clueview.h -o moc_clueview.cpp

moc_eventview.cpp: Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		GUI/eventview.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/eventview.h -o moc_eventview.cpp

compiler_rcc_make_all: qrc_ressources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_ressources.cpp
qrc_ressources.cpp: ressources.qrc \
		res/de.png \
		res/error.png \
		res/begin.png \
		res/copy.png \
		res/load.png \
		res/dice.png \
		res/glass.png \
		res/go.png \
		res/options.png \
		res/open.png \
		res/info_small.png \
		res/mj.png \
		res/log.png \
		res/save.png \
		ressources/schoolbell.wav
	/usr/bin/rcc -name ressources ressources.qrc -o qrc_ressources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_gamewidget.h ui_mjwidget.h ui_settingswidget.h ui_logwidget.h ui_datawidget.h ui_mainwindow.h ui_firstwidget.h ui_eventview.h
compiler_uic_clean:
	-$(DEL_FILE) ui_gamewidget.h ui_mjwidget.h ui_settingswidget.h ui_logwidget.h ui_datawidget.h ui_mainwindow.h ui_firstwidget.h ui_eventview.h
ui_gamewidget.h: GUI/gamewidget.ui
	/usr/bin/uic-qt4 GUI/gamewidget.ui -o ui_gamewidget.h

ui_mjwidget.h: GUI/mjwidget.ui
	/usr/bin/uic-qt4 GUI/mjwidget.ui -o ui_mjwidget.h

ui_settingswidget.h: GUI/settingswidget.ui
	/usr/bin/uic-qt4 GUI/settingswidget.ui -o ui_settingswidget.h

ui_logwidget.h: GUI/logwidget.ui
	/usr/bin/uic-qt4 GUI/logwidget.ui -o ui_logwidget.h

ui_datawidget.h: GUI/datawidget.ui
	/usr/bin/uic-qt4 GUI/datawidget.ui -o ui_datawidget.h

ui_mainwindow.h: GUI/mainwindow.ui
	/usr/bin/uic-qt4 GUI/mainwindow.ui -o ui_mainwindow.h

ui_firstwidget.h: GUI/firstwidget.ui
	/usr/bin/uic-qt4 GUI/firstwidget.ui -o ui_firstwidget.h

ui_eventview.h: GUI/eventview.ui
	/usr/bin/uic-qt4 GUI/eventview.ui -o ui_eventview.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

character.o: Engine/character.cpp Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		Engine/murder.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o character.o Engine/character.cpp

main.o: main.cpp GUI/mainwindow.h \
		GUI/datawidget.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		GUI/clueview.h \
		GUI/eventview.h \
		GUI/gamewidget.h \
		Engine/log.h \
		GUI/firstwidget.h \
		GUI/logwidget.h \
		GUI/mjwidget.h \
		GUI/settingswidget.h \
		Engine/fileparsing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

murder.o: Engine/murder.cpp Engine/murder.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o murder.o Engine/murder.cpp

report.o: Engine/report.cpp Engine/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o report.o Engine/report.cpp

event.o: Engine/event.cpp Engine/event.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o event.o Engine/event.cpp

settings.o: Engine/settings.cpp Engine/settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o settings.o Engine/settings.cpp

scenario.o: Engine/scenario.cpp Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o scenario.o Engine/scenario.cpp

fileparsing.o: Engine/fileparsing.cpp Engine/fileparsing.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fileparsing.o Engine/fileparsing.cpp

data.o: Engine/data.cpp Engine/data.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o data.o Engine/data.cpp

investigation.o: Engine/investigation.cpp Engine/investigation.h \
		Engine/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o investigation.o Engine/investigation.cpp

saveddata.o: Engine/saveddata.cpp Engine/saveddata.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o saveddata.o Engine/saveddata.cpp

gamewidget.o: GUI/gamewidget.cpp GUI/gamewidget.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		Engine/log.h \
		ui_gamewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamewidget.o GUI/gamewidget.cpp

mjwidget.o: GUI/mjwidget.cpp GUI/mjwidget.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		Engine/log.h \
		ui_mjwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mjwidget.o GUI/mjwidget.cpp

settingswidget.o: GUI/settingswidget.cpp GUI/settingswidget.h \
		ui_settingswidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o settingswidget.o GUI/settingswidget.cpp

logwidget.o: GUI/logwidget.cpp GUI/logwidget.h \
		Engine/log.h \
		ui_logwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o logwidget.o GUI/logwidget.cpp

datawidget.o: GUI/datawidget.cpp GUI/datawidget.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		GUI/clueview.h \
		GUI/eventview.h \
		ui_datawidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o datawidget.o GUI/datawidget.cpp

mainwindow.o: GUI/mainwindow.cpp GUI/mainwindow.h \
		GUI/datawidget.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		GUI/clueview.h \
		GUI/eventview.h \
		GUI/gamewidget.h \
		Engine/log.h \
		GUI/firstwidget.h \
		GUI/logwidget.h \
		GUI/mjwidget.h \
		GUI/settingswidget.h \
		Engine/fileparsing.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o GUI/mainwindow.cpp

firstwidget.o: GUI/firstwidget.cpp GUI/firstwidget.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		ui_firstwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o firstwidget.o GUI/firstwidget.cpp

clueview.o: GUI/clueview.cpp GUI/clueview.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o clueview.o GUI/clueview.cpp

eventview.o: GUI/eventview.cpp GUI/eventview.h \
		Engine/scenario.h \
		Engine/data.h \
		Engine/event.h \
		Engine/character.h \
		Engine/investigation.h \
		Engine/report.h \
		ui_eventview.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o eventview.o GUI/eventview.cpp

log.o: Engine/log.cpp Engine/log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o log.o Engine/log.cpp

moc_gamewidget.o: moc_gamewidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamewidget.o moc_gamewidget.cpp

moc_mjwidget.o: moc_mjwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mjwidget.o moc_mjwidget.cpp

moc_settingswidget.o: moc_settingswidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_settingswidget.o moc_settingswidget.cpp

moc_logwidget.o: moc_logwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_logwidget.o moc_logwidget.cpp

moc_datawidget.o: moc_datawidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_datawidget.o moc_datawidget.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_firstwidget.o: moc_firstwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_firstwidget.o moc_firstwidget.cpp

moc_clueview.o: moc_clueview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_clueview.o moc_clueview.cpp

moc_eventview.o: moc_eventview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_eventview.o moc_eventview.cpp

qrc_ressources.o: qrc_ressources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_ressources.o qrc_ressources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

